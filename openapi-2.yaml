swagger: "2.0"
info:
    description: "Это Тестовая схема OpenAPI версии 2"
    version: "1.0.0"
    title: "Swagger 2.0"
    termsOfService: "http://swagger.io/terms/"
    contact:
        email: "apiteam@swagger.io"
    license:
        name: "Apache 2.0"
        url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "openapi-2.example.com"
basePath: "/v2"
schemes:
    - "https"
    - "http"

paths:
    /other-api/{collectionId}/{id}:
        get:
            parameters:
                -   name: "id"
                    in: "path"
                    required: true
                    type: "number"

                -   name: "limit"
                    in: "query"
                    required: true
                    type: "number"

                -   name: "offset"
                    in: "query"
                    type: "integer"
            responses:
                "200":
                    description: "successful operation"
                    schema:
                        type: "string"
        parameters:
            -   name: "collectionId"
                in: "path"
                required: true
                type: "string"

securityDefinitions:
    petstore_auth:
        type: "oauth2"
        authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
        flow: "implicit"
        scopes:
            write:pets: "modify pets in your account"
            read:pets: "read your pets"
    api_key:
        type: "apiKey"
        name: "api_key"
        in: "header"
definitions:

    Order:
        type: "object"
        properties:
            id:
                type: "integer"
                format: "int64"
            petId:
                type: "integer"
                format: "int64"
            quantity:
                type: "integer"
                format: "int32"
            shipDate:
                type: "string"
                format: "date-time"
            status:
                type: "string"
                description: "Order Status"
                enum:
                    - "placed"
                    - "approved"
                    - "delivered"
            complete:
                type: "boolean"
                default: false
        xml:
            name: "Order"
    Category:
        type: "object"
        properties:
            id:
                type: "integer"
                format: "int64"
            name:
                type: "string"
        xml:
            name: "Category"
    User:
        type: "object"
        properties:
            id:
                type: "integer"
                format: "int64"
            username:
                type: "string"
            firstName:
                type: "string"
            lastName:
                type: "string"
            email:
                type: "string"
            password:
                type: "string"
            phone:
                type: "string"
            userStatus:
                type: "integer"
                format: "int32"
                description: "User Status"
        xml:
            name: "User"
    Tag:
        type: "object"
        properties:
            id:
                type: "integer"
                format: "int64"
            name:
                type: "string"
        xml:
            name: "Tag"
    Pet:
        type: "object"
        required:
            - "name"
            - "photoUrls"
        properties:
            id:
                type: "integer"
                format: "int64"
            category:
                $ref: "#/definitions/Category"
            name:
                type: "string"
                example: "doggie"
            photoUrls:
                type: "array"
                xml:
                    name: "photoUrl"
                    wrapped: true
                items:
                    type: "string"
            tags:
                type: "array"
                xml:
                    name: "tag"
                    wrapped: true
                items:
                    $ref: "#/definitions/Tag"
            status:
                type: "string"
                description: "pet status in the store"
                enum:
                    - "available"
                    - "pending"
                    - "sold"
        xml:
            name: "Pet"
    ApiResponse:
        type: "object"
        properties:
            code:
                type: "integer"
                format: "int32"
            type:
                type: "string"
            message:
                type: "string"
externalDocs:
    description: "Find out more about Swagger"
    url: "http://swagger.io"
